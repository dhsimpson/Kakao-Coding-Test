#include <string>
#include <vector>
#include <map>
#include <iostream>

using namespace std;

vector<int> solution(vector<string> gems) {
    vector<int> answer;
    int start = 0;
    int end = 0;
    int res_s = 0;
    int res_e = gems.size();
    int cnt = 0;
    map<string, int> m;
    map<string, int> buy;
    
    for(auto gem : gems){
        if(!m[gem]){
            cnt++;
            m[gem] = 1;
            buy[gem] = 0;
        }
    }
    
    buy[gems[0]] = 1;
    int count = 1;
    bool flag = true;
    while(start<=end){
        // 현재 범위에 모든 gem 종류가 있는지 아닌지 확인
        if(count<cnt && flag){
            end++;
            if(buy[gems[end]]==0) count++; // 새로운 종류이면 종류를 증가
            buy[gems[end]]++;
        }
        // 현재 범위가 모든 종류를 포함한다면 길이를 비교하고 갱신
        else if(count == cnt){
            if(end-start < res_e - res_s){
                res_e = end+1;
                res_s = start+1;
            }
            // 다 포함되는 범위를 찾았다면 맨 앞의 포인터를 움직임 & gem 하나 빼줌
            if(buy[gems[start]]==1) count--;
            buy[gems[start]]--;
            start++;
        }
        else break;
        if(end == gems.size() - 1) flag = false;
    }
    answer.push_back(res_s);
    answer.push_back(res_e);
    return answer;
}
